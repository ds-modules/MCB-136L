{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Lab 12: Introduction to Allen Brain Connectivity Atlas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The **Allen Brain Institute for Brain Science** is a non-profit research institute that uses big science to understand how the brain works. One fo the projects we will be looking into is how to map gene expression and connectivity in different areas of the mouse brain. The amount of data they collect is vast â€“ they have collected the expression patterns of over 20,000 (of about 25,000 total) genes in the mouse brain. All the data is publicly available, allowing neuroscientists to explore the comprehensive data sets, which one individual lab could never generate on their own.\n",
    "\n",
    "In this part of the lab, you will be utilizing the online database from the **Allen Brain Connectivity Atlas** that contains information about experiment projection sites, densities, and intensities to make statistical analyses. You will be analyzing the anatomy and neural connectivity map of the **Papez Circuit** through the limbic system in mouse brains.\n",
    "\n",
    "<img src='papez_circuit.jpg', width=\"750px\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 1: Papez Circuit in the Limbic System"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The **Papez circuit** (also known as the medial limbic circuit) is a pathway through the limbic system originally described by James Papez in 1937. He believed that this circuit was the basis of emotions, but we know now that it is actually more involved in memory formation. Damage to different components of the circuit, like the hippocampus, mammillary bodies, and fornix, can result in amnesia. Since the initial description of the circuit, we have discovered many more inputs and outputs to these structures, but the Papez circuit still serves as a good review of major limbic system pathways. We will look for this circuit using the mouse brain connectivity atlas.\n",
    "\n",
    "In this Section, you will be:\n",
    "\n",
    "* Exploring the **Allensdk Mouse Brain API**\n",
    "* Understanding the anatomy of the **Papez Circuit**\n",
    "* Using statistical analysis to understand neural projections and connectivity\n",
    "\n",
    "We will start by looking into the information gathered for the Primary Visual Cortex and then the Subiculum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Run this cell\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "from allensdk.core.mouse_connectivity_cache import MouseConnectivityCache\n",
    "from allensdk.api.queries.ontologies_api import OntologiesApi\n",
    "\n",
    "%matplotlib inline \n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Activates the API and cache\n",
    "# Run this cell\n",
    "\n",
    "mcc = MouseConnectivityCache()\n",
    "structure_tree = mcc.get_structure_tree()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'acronym': 'VISp',\n",
       "  'graph_id': 1,\n",
       "  'graph_order': 185,\n",
       "  'id': 385,\n",
       "  'name': 'Primary visual area',\n",
       "  'rgb_triplet': [8, 133, 140],\n",
       "  'structure_id_path': [997, 8, 567, 688, 695, 315, 669, 385],\n",
       "  'structure_set_ids': [396673091,\n",
       "   112905828,\n",
       "   688152357,\n",
       "   691663206,\n",
       "   687527945,\n",
       "   12,\n",
       "   184527634,\n",
       "   514166994,\n",
       "   112905813,\n",
       "   167587189,\n",
       "   114512891,\n",
       "   114512892]}]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Allows you to access information about the \"Primary visual area.\"\n",
    "\n",
    "your_structure = structure_tree.get_structures_by_name(['Primary visual area'])\n",
    "your_structure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The structure ID for the Primary Visual Cortex is: 385\n"
     ]
    }
   ],
   "source": [
    "# Can also get the unique id for this structure\n",
    "\n",
    "your_structure_id = your_structure[0]['id']\n",
    "print(\"The structure ID for the Primary Visual Cortex is:\", your_structure_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 283 experiments for the Primary Visual Cortex.\n"
     ]
    }
   ],
   "source": [
    "# Using the structure ID, we can get the list of experiments for that structure\n",
    "\n",
    "experiments = mcc.get_experiments(injection_structure_ids=[385]) # insert your structure id here\n",
    "\n",
    "print(\"There are\", len(experiments), \"experiments for the Primary Visual Cortex.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>id</th>\n",
       "      <th>injection_structures</th>\n",
       "      <th>injection_volume</th>\n",
       "      <th>injection_x</th>\n",
       "      <th>injection_y</th>\n",
       "      <th>injection_z</th>\n",
       "      <th>primary_injection_structure</th>\n",
       "      <th>product_id</th>\n",
       "      <th>specimen_name</th>\n",
       "      <th>strain</th>\n",
       "      <th>structure_abbrev</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>structure_name</th>\n",
       "      <th>transgenic_line</th>\n",
       "      <th>transgenic_line_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M</td>\n",
       "      <td>500836840</td>\n",
       "      <td>[385]</td>\n",
       "      <td>0.375218</td>\n",
       "      <td>8850</td>\n",
       "      <td>1440</td>\n",
       "      <td>3550</td>\n",
       "      <td>385</td>\n",
       "      <td>36</td>\n",
       "      <td>Emx1-IRES-Cre-212542</td>\n",
       "      <td>None</td>\n",
       "      <td>VISp</td>\n",
       "      <td>385</td>\n",
       "      <td>Primary visual area</td>\n",
       "      <td>Emx1-IRES-Cre</td>\n",
       "      <td>177836119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>307297141</td>\n",
       "      <td>[385, 409]</td>\n",
       "      <td>0.663636</td>\n",
       "      <td>9230</td>\n",
       "      <td>1910</td>\n",
       "      <td>8430</td>\n",
       "      <td>385</td>\n",
       "      <td>5</td>\n",
       "      <td>C57BL/6-152922</td>\n",
       "      <td>C57BL/6J</td>\n",
       "      <td>VISp</td>\n",
       "      <td>385</td>\n",
       "      <td>Primary visual area</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>272821309</td>\n",
       "      <td>[385]</td>\n",
       "      <td>0.125424</td>\n",
       "      <td>8690</td>\n",
       "      <td>900</td>\n",
       "      <td>8110</td>\n",
       "      <td>385</td>\n",
       "      <td>5</td>\n",
       "      <td>Cux2-IRES-Cre-288</td>\n",
       "      <td>C57BL/6J</td>\n",
       "      <td>VISp</td>\n",
       "      <td>385</td>\n",
       "      <td>Primary visual area</td>\n",
       "      <td>Cux2-IRES-Cre</td>\n",
       "      <td>177839022.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>512315551</td>\n",
       "      <td>[385, 409, 425, 894]</td>\n",
       "      <td>1.614223</td>\n",
       "      <td>8460</td>\n",
       "      <td>1630</td>\n",
       "      <td>2340</td>\n",
       "      <td>385</td>\n",
       "      <td>36</td>\n",
       "      <td>Emx1-IRES-Cre-234272</td>\n",
       "      <td>None</td>\n",
       "      <td>VISp</td>\n",
       "      <td>385</td>\n",
       "      <td>Primary visual area</td>\n",
       "      <td>Emx1-IRES-Cre</td>\n",
       "      <td>177836119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M</td>\n",
       "      <td>510581751</td>\n",
       "      <td>[385]</td>\n",
       "      <td>0.031653</td>\n",
       "      <td>9230</td>\n",
       "      <td>1390</td>\n",
       "      <td>3070</td>\n",
       "      <td>385</td>\n",
       "      <td>36</td>\n",
       "      <td>Tlx3-Cre_PL56-232871</td>\n",
       "      <td>None</td>\n",
       "      <td>VISp</td>\n",
       "      <td>385</td>\n",
       "      <td>Primary visual area</td>\n",
       "      <td>Tlx3-Cre_PL56</td>\n",
       "      <td>265180449.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  gender         id  injection_structures  injection_volume  injection_x  \\\n",
       "0      M  500836840                 [385]          0.375218         8850   \n",
       "1      M  307297141            [385, 409]          0.663636         9230   \n",
       "2      F  272821309                 [385]          0.125424         8690   \n",
       "3      M  512315551  [385, 409, 425, 894]          1.614223         8460   \n",
       "4      M  510581751                 [385]          0.031653         9230   \n",
       "\n",
       "   injection_y  injection_z  primary_injection_structure  product_id  \\\n",
       "0         1440         3550                          385          36   \n",
       "1         1910         8430                          385           5   \n",
       "2          900         8110                          385           5   \n",
       "3         1630         2340                          385          36   \n",
       "4         1390         3070                          385          36   \n",
       "\n",
       "          specimen_name    strain structure_abbrev  structure_id  \\\n",
       "0  Emx1-IRES-Cre-212542      None             VISp           385   \n",
       "1        C57BL/6-152922  C57BL/6J             VISp           385   \n",
       "2     Cux2-IRES-Cre-288  C57BL/6J             VISp           385   \n",
       "3  Emx1-IRES-Cre-234272      None             VISp           385   \n",
       "4  Tlx3-Cre_PL56-232871      None             VISp           385   \n",
       "\n",
       "        structure_name transgenic_line  transgenic_line_id  \n",
       "0  Primary visual area   Emx1-IRES-Cre         177836119.0  \n",
       "1  Primary visual area            None                 NaN  \n",
       "2  Primary visual area   Cux2-IRES-Cre         177839022.0  \n",
       "3  Primary visual area   Emx1-IRES-Cre         177836119.0  \n",
       "4  Primary visual area   Tlx3-Cre_PL56         265180449.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This can be directly converted into a DataFrame. Syntax:\n",
    "dat = pd.DataFrame(experiments)\n",
    "dat.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also find the summary structure ids using a function from the MouseConnectivityCache structure_tree method. Using the get_structures_by_set_id function, we can access any of the Allen Institute's predefined structure sets by their unique id. For the \"Mouse Connectivity - Summary\" structure set, the unique id is **167587189**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Allows us to get a summary of the structure set for the Mouse B\n",
    "summary_structures = structure_tree.get_structures_by_set_id([167587189])\n",
    "summary_structure_ids = [item['id'] for item in summary_structures]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# First let's find the targets for a single experiment\n",
    "\n",
    "sample_experiment = 512315551 # your experiment number here\n",
    "\n",
    "unionizes = mcc.get_structure_unionizes(experiment_ids=[sample_experiment],\n",
    "                                        # Since we are looking at projection targets, we set \"is_injection\" to False\n",
    "                                       is_injection = False,\n",
    "                                        # Look at the summary structure level\n",
    "                                        structure_ids = summary_structure_ids,\n",
    "                                       # both hemispheres\n",
    "                                       hemisphere_ids = [3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "316"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# How many projection targets are there in our area of interest?\n",
    "\n",
    "len(unionizes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hemisphere_id</th>\n",
       "      <th>id</th>\n",
       "      <th>is_injection</th>\n",
       "      <th>max_voxel_density</th>\n",
       "      <th>max_voxel_x</th>\n",
       "      <th>max_voxel_y</th>\n",
       "      <th>max_voxel_z</th>\n",
       "      <th>normalized_projection_volume</th>\n",
       "      <th>projection_density</th>\n",
       "      <th>projection_energy</th>\n",
       "      <th>projection_intensity</th>\n",
       "      <th>projection_volume</th>\n",
       "      <th>experiment_id</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>sum_pixel_intensity</th>\n",
       "      <th>sum_pixels</th>\n",
       "      <th>sum_projection_pixel_intensity</th>\n",
       "      <th>sum_projection_pixels</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>640691982</td>\n",
       "      <td>False</td>\n",
       "      <td>0.109373</td>\n",
       "      <td>10510</td>\n",
       "      <td>3030</td>\n",
       "      <td>4620</td>\n",
       "      <td>0.000022</td>\n",
       "      <td>0.000058</td>\n",
       "      <td>0.014124</td>\n",
       "      <td>245.056827</td>\n",
       "      <td>0.000035</td>\n",
       "      <td>512315551</td>\n",
       "      <td>616</td>\n",
       "      <td>3.275158e+10</td>\n",
       "      <td>4.962852e+08</td>\n",
       "      <td>7.009412e+06</td>\n",
       "      <td>2.860321e+04</td>\n",
       "      <td>0.607949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>640692700</td>\n",
       "      <td>False</td>\n",
       "      <td>0.120961</td>\n",
       "      <td>7540</td>\n",
       "      <td>3580</td>\n",
       "      <td>5050</td>\n",
       "      <td>0.000025</td>\n",
       "      <td>0.000074</td>\n",
       "      <td>0.033857</td>\n",
       "      <td>454.581900</td>\n",
       "      <td>0.000040</td>\n",
       "      <td>512315551</td>\n",
       "      <td>930</td>\n",
       "      <td>5.697317e+10</td>\n",
       "      <td>4.373946e+08</td>\n",
       "      <td>1.480899e+07</td>\n",
       "      <td>3.257718e+04</td>\n",
       "      <td>0.535808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>640691722</td>\n",
       "      <td>False</td>\n",
       "      <td>0.015696</td>\n",
       "      <td>9970</td>\n",
       "      <td>5230</td>\n",
       "      <td>5600</td>\n",
       "      <td>0.000002</td>\n",
       "      <td>0.000037</td>\n",
       "      <td>0.007536</td>\n",
       "      <td>202.054025</td>\n",
       "      <td>0.000004</td>\n",
       "      <td>512315551</td>\n",
       "      <td>238</td>\n",
       "      <td>3.262881e+09</td>\n",
       "      <td>8.745300e+07</td>\n",
       "      <td>6.590154e+05</td>\n",
       "      <td>3.261580e+03</td>\n",
       "      <td>0.107130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>640691821</td>\n",
       "      <td>False</td>\n",
       "      <td>0.477235</td>\n",
       "      <td>6150</td>\n",
       "      <td>820</td>\n",
       "      <td>8320</td>\n",
       "      <td>0.000626</td>\n",
       "      <td>0.000243</td>\n",
       "      <td>0.132132</td>\n",
       "      <td>543.062246</td>\n",
       "      <td>0.001011</td>\n",
       "      <td>512315551</td>\n",
       "      <td>369</td>\n",
       "      <td>6.897905e+11</td>\n",
       "      <td>3.392516e+09</td>\n",
       "      <td>4.482613e+08</td>\n",
       "      <td>8.254327e+05</td>\n",
       "      <td>4.155832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>640691919</td>\n",
       "      <td>False</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>8070</td>\n",
       "      <td>2350</td>\n",
       "      <td>5200</td>\n",
       "      <td>0.009473</td>\n",
       "      <td>0.316758</td>\n",
       "      <td>866.083365</td>\n",
       "      <td>2734.208355</td>\n",
       "      <td>0.015292</td>\n",
       "      <td>512315551</td>\n",
       "      <td>531</td>\n",
       "      <td>4.015562e+10</td>\n",
       "      <td>3.940920e+07</td>\n",
       "      <td>3.413165e+10</td>\n",
       "      <td>1.248319e+07</td>\n",
       "      <td>0.048276</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   hemisphere_id         id  is_injection  max_voxel_density  max_voxel_x  \\\n",
       "0              3  640691982         False           0.109373        10510   \n",
       "1              3  640692700         False           0.120961         7540   \n",
       "2              3  640691722         False           0.015696         9970   \n",
       "3              3  640691821         False           0.477235         6150   \n",
       "4              3  640691919         False           1.000000         8070   \n",
       "\n",
       "   max_voxel_y  max_voxel_z  normalized_projection_volume  projection_density  \\\n",
       "0         3030         4620                      0.000022            0.000058   \n",
       "1         3580         5050                      0.000025            0.000074   \n",
       "2         5230         5600                      0.000002            0.000037   \n",
       "3          820         8320                      0.000626            0.000243   \n",
       "4         2350         5200                      0.009473            0.316758   \n",
       "\n",
       "   projection_energy  projection_intensity  projection_volume  experiment_id  \\\n",
       "0           0.014124            245.056827           0.000035      512315551   \n",
       "1           0.033857            454.581900           0.000040      512315551   \n",
       "2           0.007536            202.054025           0.000004      512315551   \n",
       "3           0.132132            543.062246           0.001011      512315551   \n",
       "4         866.083365           2734.208355           0.015292      512315551   \n",
       "\n",
       "   structure_id  sum_pixel_intensity    sum_pixels  \\\n",
       "0           616         3.275158e+10  4.962852e+08   \n",
       "1           930         5.697317e+10  4.373946e+08   \n",
       "2           238         3.262881e+09  8.745300e+07   \n",
       "3           369         6.897905e+11  3.392516e+09   \n",
       "4           531         4.015562e+10  3.940920e+07   \n",
       "\n",
       "   sum_projection_pixel_intensity  sum_projection_pixels    volume  \n",
       "0                    7.009412e+06           2.860321e+04  0.607949  \n",
       "1                    1.480899e+07           3.257718e+04  0.535808  \n",
       "2                    6.590154e+05           3.261580e+03  0.107130  \n",
       "3                    4.482613e+08           8.254327e+05  4.155832  \n",
       "4                    3.413165e+10           1.248319e+07  0.048276  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unionizes.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Primary visual area'"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "name_map = structure_tree.get_name_map()\n",
    "name_map[385] # insert structure id here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "385"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The structure tree also has a built-in map for going from acronyms to ids:\n",
    "acronym_to_id_map = structure_tree.get_id_acronym_map()\n",
    "acronym_to_id_map['VISp']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hemisphere_id</th>\n",
       "      <th>id</th>\n",
       "      <th>is_injection</th>\n",
       "      <th>max_voxel_density</th>\n",
       "      <th>max_voxel_x</th>\n",
       "      <th>max_voxel_y</th>\n",
       "      <th>max_voxel_z</th>\n",
       "      <th>normalized_projection_volume</th>\n",
       "      <th>projection_density</th>\n",
       "      <th>projection_energy</th>\n",
       "      <th>projection_intensity</th>\n",
       "      <th>projection_volume</th>\n",
       "      <th>experiment_id</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>sum_pixel_intensity</th>\n",
       "      <th>sum_pixels</th>\n",
       "      <th>sum_projection_pixel_intensity</th>\n",
       "      <th>sum_projection_pixels</th>\n",
       "      <th>volume</th>\n",
       "      <th>structure_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>301</th>\n",
       "      <td>3</td>\n",
       "      <td>640691671</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7330</td>\n",
       "      <td>2940</td>\n",
       "      <td>3600</td>\n",
       "      <td>0.158428</td>\n",
       "      <td>0.321132</td>\n",
       "      <td>1896.806790</td>\n",
       "      <td>5906.623591</td>\n",
       "      <td>0.255738</td>\n",
       "      <td>512315551</td>\n",
       "      <td>170</td>\n",
       "      <td>1.325262e+12</td>\n",
       "      <td>650093384.0</td>\n",
       "      <td>1.233102e+12</td>\n",
       "      <td>2.087659e+08</td>\n",
       "      <td>0.796364</td>\n",
       "      <td>Dorsal part of the lateral geniculate complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>640691919</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8070</td>\n",
       "      <td>2350</td>\n",
       "      <td>5200</td>\n",
       "      <td>0.009473</td>\n",
       "      <td>0.316758</td>\n",
       "      <td>866.083365</td>\n",
       "      <td>2734.208355</td>\n",
       "      <td>0.015292</td>\n",
       "      <td>512315551</td>\n",
       "      <td>531</td>\n",
       "      <td>4.015562e+10</td>\n",
       "      <td>39409200.0</td>\n",
       "      <td>3.413165e+10</td>\n",
       "      <td>1.248319e+07</td>\n",
       "      <td>0.048276</td>\n",
       "      <td>Medial pretectal area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>3</td>\n",
       "      <td>640691675</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7500</td>\n",
       "      <td>3750</td>\n",
       "      <td>3010</td>\n",
       "      <td>0.084131</td>\n",
       "      <td>0.303594</td>\n",
       "      <td>1405.413845</td>\n",
       "      <td>4629.259719</td>\n",
       "      <td>0.135807</td>\n",
       "      <td>512315551</td>\n",
       "      <td>178</td>\n",
       "      <td>5.595962e+11</td>\n",
       "      <td>365167808.0</td>\n",
       "      <td>5.132119e+11</td>\n",
       "      <td>1.108626e+08</td>\n",
       "      <td>0.447331</td>\n",
       "      <td>Ventral part of the lateral geniculate complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>3</td>\n",
       "      <td>640691920</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9260</td>\n",
       "      <td>570</td>\n",
       "      <td>4280</td>\n",
       "      <td>0.195120</td>\n",
       "      <td>0.272402</td>\n",
       "      <td>731.261061</td>\n",
       "      <td>2684.494653</td>\n",
       "      <td>0.314968</td>\n",
       "      <td>512315551</td>\n",
       "      <td>533</td>\n",
       "      <td>8.389289e+11</td>\n",
       "      <td>943887608.0</td>\n",
       "      <td>6.902283e+11</td>\n",
       "      <td>2.571166e+08</td>\n",
       "      <td>1.156262</td>\n",
       "      <td>posteromedial visual area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>3</td>\n",
       "      <td>640691859</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9580</td>\n",
       "      <td>2410</td>\n",
       "      <td>2180</td>\n",
       "      <td>0.108321</td>\n",
       "      <td>0.247901</td>\n",
       "      <td>700.305833</td>\n",
       "      <td>2824.945791</td>\n",
       "      <td>0.174854</td>\n",
       "      <td>512315551</td>\n",
       "      <td>425</td>\n",
       "      <td>5.003236e+11</td>\n",
       "      <td>575788264.0</td>\n",
       "      <td>4.032279e+11</td>\n",
       "      <td>1.427383e+08</td>\n",
       "      <td>0.705341</td>\n",
       "      <td>Posterolateral visual area</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     hemisphere_id         id  is_injection  max_voxel_density  max_voxel_x  \\\n",
       "301              3  640691671         False                1.0         7330   \n",
       "4                3  640691919         False                1.0         8070   \n",
       "90               3  640691675         False                1.0         7500   \n",
       "236              3  640691920         False                1.0         9260   \n",
       "196              3  640691859         False                1.0         9580   \n",
       "\n",
       "     max_voxel_y  max_voxel_z  normalized_projection_volume  \\\n",
       "301         2940         3600                      0.158428   \n",
       "4           2350         5200                      0.009473   \n",
       "90          3750         3010                      0.084131   \n",
       "236          570         4280                      0.195120   \n",
       "196         2410         2180                      0.108321   \n",
       "\n",
       "     projection_density  projection_energy  projection_intensity  \\\n",
       "301            0.321132        1896.806790           5906.623591   \n",
       "4              0.316758         866.083365           2734.208355   \n",
       "90             0.303594        1405.413845           4629.259719   \n",
       "236            0.272402         731.261061           2684.494653   \n",
       "196            0.247901         700.305833           2824.945791   \n",
       "\n",
       "     projection_volume  experiment_id  structure_id  sum_pixel_intensity  \\\n",
       "301           0.255738      512315551           170         1.325262e+12   \n",
       "4             0.015292      512315551           531         4.015562e+10   \n",
       "90            0.135807      512315551           178         5.595962e+11   \n",
       "236           0.314968      512315551           533         8.389289e+11   \n",
       "196           0.174854      512315551           425         5.003236e+11   \n",
       "\n",
       "      sum_pixels  sum_projection_pixel_intensity  sum_projection_pixels  \\\n",
       "301  650093384.0                    1.233102e+12           2.087659e+08   \n",
       "4     39409200.0                    3.413165e+10           1.248319e+07   \n",
       "90   365167808.0                    5.132119e+11           1.108626e+08   \n",
       "236  943887608.0                    6.902283e+11           2.571166e+08   \n",
       "196  575788264.0                    4.032279e+11           1.427383e+08   \n",
       "\n",
       "       volume                                  structure_name  \n",
       "301  0.796364   Dorsal part of the lateral geniculate complex  \n",
       "4    0.048276                           Medial pretectal area  \n",
       "90   0.447331  Ventral part of the lateral geniculate complex  \n",
       "236  1.156262                       posteromedial visual area  \n",
       "196  0.705341                      Posterolateral visual area  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We can use the name_map method from structure_tree to add a \"structure names\" column to our unionizes dataframe\n",
    "\n",
    "names = [name_map[strid] for strid in unionizes['structure_id']]\n",
    "unionizes['structure_name'] = names\n",
    "unionizes.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hemisphere_id</th>\n",
       "      <th>id</th>\n",
       "      <th>is_injection</th>\n",
       "      <th>max_voxel_density</th>\n",
       "      <th>max_voxel_x</th>\n",
       "      <th>max_voxel_y</th>\n",
       "      <th>max_voxel_z</th>\n",
       "      <th>normalized_projection_volume</th>\n",
       "      <th>projection_density</th>\n",
       "      <th>projection_energy</th>\n",
       "      <th>projection_intensity</th>\n",
       "      <th>projection_volume</th>\n",
       "      <th>experiment_id</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>sum_pixel_intensity</th>\n",
       "      <th>sum_pixels</th>\n",
       "      <th>sum_projection_pixel_intensity</th>\n",
       "      <th>sum_projection_pixels</th>\n",
       "      <th>volume</th>\n",
       "      <th>structure_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>301</th>\n",
       "      <td>3</td>\n",
       "      <td>640691671</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7330</td>\n",
       "      <td>2940</td>\n",
       "      <td>3600</td>\n",
       "      <td>0.158428</td>\n",
       "      <td>0.321132</td>\n",
       "      <td>1896.806790</td>\n",
       "      <td>5906.623591</td>\n",
       "      <td>0.255738</td>\n",
       "      <td>512315551</td>\n",
       "      <td>170</td>\n",
       "      <td>1.325262e+12</td>\n",
       "      <td>650093384.0</td>\n",
       "      <td>1.233102e+12</td>\n",
       "      <td>2.087659e+08</td>\n",
       "      <td>0.796364</td>\n",
       "      <td>Dorsal part of the lateral geniculate complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>640691919</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8070</td>\n",
       "      <td>2350</td>\n",
       "      <td>5200</td>\n",
       "      <td>0.009473</td>\n",
       "      <td>0.316758</td>\n",
       "      <td>866.083365</td>\n",
       "      <td>2734.208355</td>\n",
       "      <td>0.015292</td>\n",
       "      <td>512315551</td>\n",
       "      <td>531</td>\n",
       "      <td>4.015562e+10</td>\n",
       "      <td>39409200.0</td>\n",
       "      <td>3.413165e+10</td>\n",
       "      <td>1.248319e+07</td>\n",
       "      <td>0.048276</td>\n",
       "      <td>Medial pretectal area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>3</td>\n",
       "      <td>640691675</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7500</td>\n",
       "      <td>3750</td>\n",
       "      <td>3010</td>\n",
       "      <td>0.084131</td>\n",
       "      <td>0.303594</td>\n",
       "      <td>1405.413845</td>\n",
       "      <td>4629.259719</td>\n",
       "      <td>0.135807</td>\n",
       "      <td>512315551</td>\n",
       "      <td>178</td>\n",
       "      <td>5.595962e+11</td>\n",
       "      <td>365167808.0</td>\n",
       "      <td>5.132119e+11</td>\n",
       "      <td>1.108626e+08</td>\n",
       "      <td>0.447331</td>\n",
       "      <td>Ventral part of the lateral geniculate complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>3</td>\n",
       "      <td>640691920</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9260</td>\n",
       "      <td>570</td>\n",
       "      <td>4280</td>\n",
       "      <td>0.195120</td>\n",
       "      <td>0.272402</td>\n",
       "      <td>731.261061</td>\n",
       "      <td>2684.494653</td>\n",
       "      <td>0.314968</td>\n",
       "      <td>512315551</td>\n",
       "      <td>533</td>\n",
       "      <td>8.389289e+11</td>\n",
       "      <td>943887608.0</td>\n",
       "      <td>6.902283e+11</td>\n",
       "      <td>2.571166e+08</td>\n",
       "      <td>1.156262</td>\n",
       "      <td>posteromedial visual area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>3</td>\n",
       "      <td>640691859</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9580</td>\n",
       "      <td>2410</td>\n",
       "      <td>2180</td>\n",
       "      <td>0.108321</td>\n",
       "      <td>0.247901</td>\n",
       "      <td>700.305833</td>\n",
       "      <td>2824.945791</td>\n",
       "      <td>0.174854</td>\n",
       "      <td>512315551</td>\n",
       "      <td>425</td>\n",
       "      <td>5.003236e+11</td>\n",
       "      <td>575788264.0</td>\n",
       "      <td>4.032279e+11</td>\n",
       "      <td>1.427383e+08</td>\n",
       "      <td>0.705341</td>\n",
       "      <td>Posterolateral visual area</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     hemisphere_id         id  is_injection  max_voxel_density  max_voxel_x  \\\n",
       "301              3  640691671         False                1.0         7330   \n",
       "4                3  640691919         False                1.0         8070   \n",
       "90               3  640691675         False                1.0         7500   \n",
       "236              3  640691920         False                1.0         9260   \n",
       "196              3  640691859         False                1.0         9580   \n",
       "\n",
       "     max_voxel_y  max_voxel_z  normalized_projection_volume  \\\n",
       "301         2940         3600                      0.158428   \n",
       "4           2350         5200                      0.009473   \n",
       "90          3750         3010                      0.084131   \n",
       "236          570         4280                      0.195120   \n",
       "196         2410         2180                      0.108321   \n",
       "\n",
       "     projection_density  projection_energy  projection_intensity  \\\n",
       "301            0.321132        1896.806790           5906.623591   \n",
       "4              0.316758         866.083365           2734.208355   \n",
       "90             0.303594        1405.413845           4629.259719   \n",
       "236            0.272402         731.261061           2684.494653   \n",
       "196            0.247901         700.305833           2824.945791   \n",
       "\n",
       "     projection_volume  experiment_id  structure_id  sum_pixel_intensity  \\\n",
       "301           0.255738      512315551           170         1.325262e+12   \n",
       "4             0.015292      512315551           531         4.015562e+10   \n",
       "90            0.135807      512315551           178         5.595962e+11   \n",
       "236           0.314968      512315551           533         8.389289e+11   \n",
       "196           0.174854      512315551           425         5.003236e+11   \n",
       "\n",
       "      sum_pixels  sum_projection_pixel_intensity  sum_projection_pixels  \\\n",
       "301  650093384.0                    1.233102e+12           2.087659e+08   \n",
       "4     39409200.0                    3.413165e+10           1.248319e+07   \n",
       "90   365167808.0                    5.132119e+11           1.108626e+08   \n",
       "236  943887608.0                    6.902283e+11           2.571166e+08   \n",
       "196  575788264.0                    4.032279e+11           1.427383e+08   \n",
       "\n",
       "       volume                                  structure_name  \n",
       "301  0.796364   Dorsal part of the lateral geniculate complex  \n",
       "4    0.048276                           Medial pretectal area  \n",
       "90   0.447331  Ventral part of the lateral geniculate complex  \n",
       "236  1.156262                       posteromedial visual area  \n",
       "196  0.705341                      Posterolateral visual area  "
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unionizes.sort_values('projection_density', ascending=False, inplace=True)\n",
    "unionizes.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Instead of looking at a single experiment, you can also obtain all of the unionizes for a given set of experiments. For example, we can find all the projection unionizes for all injections into VISp in wild type mice."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number of injections in wild type mice:  33\n",
      "length of unionize results:  10428\n"
     ]
    }
   ],
   "source": [
    "experiment_set = [exp['id'] for exp in experiments if exp['transgenic_line'] == None]\n",
    "print('number of injections in wild type mice: ', len(experiment_set))\n",
    "unionizes_set = mcc.get_structure_unionizes(experiment_set,\n",
    "                                               is_injection = False,\n",
    "                                                # Look at the summary structure level\n",
    "                                                structure_ids = summary_structure_ids,\n",
    "                                               # both hemispheres\n",
    "                                               hemisphere_ids = [3])\n",
    "print('length of unionize results: ', len(unionizes_set))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a18d488d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "densities = unionizes_set[unionizes_set['structure_id'] == 385]['projection_density']\n",
    "plt.title(\"Distribution of Projection Densities at the Primary Visual Area\")\n",
    "plt.xlabel(\"Projection Density\")\n",
    "sns.kdeplot(densities);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nYy7/0+UUs1HIs6vo803nPoLk42xC0J1q3wUYKGktYZx8ptFxNhHS/39KfW7atGnBNsyMgw8+mBkz\nZpQp//rrr7O0yG0rm4+NGjVaX9agQQN++CF7QpBM/++uW7eO7bffnpKSTHMqZe2n/OjcuTNTpkzh\n2WefpXfv3gwcOLDM7GcmevfuzahRo3jkkUd44IEHctatFGbmL3/5y1+bxKt9+/bmOE5uXn/99bp2\nwZYsWWKATZ8+3czMLrroIhs+fLjtueee9tlnn62vV1RUZFOmTDEzsxtuuMF+/etfm5lZnz59bMyY\nMbZmzRrbZ5991tv5/vvvbdGiRWZmdvjhh9uTTz5pZmarV6+2b7/91ubMmWOdO3deb3/ixIl2yimn\nmJlZ//79bciQIevLi4uL19932LBh69scfPDBtmTJkoz9mjt3rrVt29ZWrVplX3/9te27777r2x55\n5JH22GOPmZnZunXrrKSkpExfUjRt2tTMzJYuXWpr1641M7Nbb73VrrzySjOz9WP0+eef2x577FHm\n/h9//LHtscce1rFjx6xjn+n5A3OsgP9jfU+j4ziO4zi1zoEHHsjIkSMpKiriiy++4LLLLitXZ+TI\nkQwcOJCioiJKSkq4/vrr11+TxFZbbcXYsWP57W9/S7t27SguLmb69JBG+O9//zt33HEHRUVFHHXU\nUXz88ccUFRXRsGFD2rVrx6233lrmXoMHD2bOnDkUFRUxaNAgRo4cWeE+HXroofTq1Yvi4mLOPPNM\njjlmQ5awUaNG8be//Y127dpx8MEHlzm0kolJkyZRXFzMIYccwuOPP86VV15Z5nrz5s05+uijadOm\nDQMHDgRgl1124cADD+TCCy+ssO+FoBBgOo7jbPx06NDB5syZU9duOE695o033uDAAw/MX7EGWbp0\nKaeeeiqLFlVOVOq0007j6quvpmvXrvkrb0asWrWKtm3bMm/ePJo1y5xNItPzlzTXzPLmHtooZhpV\nD2XuYvm51XWfDPZPlzSoCu1rVLJOFZScq8b7DpD0hqRRaeXFMbdg6vNgSdfUtn+bEgqJzXdNfL5f\nCdnBPG3LPI/q9sVxnM2Xfv36sWrVKjp16lTXrtQrXnzxRVq3bk3//v2zBoxVZVM8CNOF2pG5a0U4\nxTo6T73kfQqWtjOzcYS8h05ZLgd+ZmZL0sqLCalenqt9l+qOmJ5GZrauBsz3JRzw+TeAmV1UgbZZ\n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\n4zh5+f/16Z0FPpQ03wAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1905c780>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We can combine groupby and mean to find the average projection density across experiments for each summary structure\n",
    "unionizes_set_mean = (unionizes_set.groupby('structure_id', as_index = False)['projection_density'].mean())\n",
    "\n",
    "# Again, add a column with summary structure acronyms so we can interpret the unionizes more easily\n",
    "names = [name_map[strid] for strid in unionizes_set_mean['structure_id']]\n",
    "unionizes_set_mean['structure_name'] = names\n",
    "unionizes_set_mean.sort_values(by = 'projection_density', ascending = False, inplace = True)\n",
    "\n",
    "# Plot the 20 structures with the highest average projection density across all wild type VISp injections\n",
    "unionizes_set_mean[:20].plot('structure_name', 'projection_density', kind='barh')\n",
    "plt.gca().invert_yaxis()\n",
    "plt.title('Average Unionize Data for %i injections'%len(experiment_set));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>structure_id</th>\n",
       "      <th>projection_density</th>\n",
       "      <th>structure_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>409</td>\n",
       "      <td>0.173552</td>\n",
       "      <td>Lateral visual area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>170</td>\n",
       "      <td>0.143360</td>\n",
       "      <td>Dorsal part of the lateral geniculate complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>178</td>\n",
       "      <td>0.139534</td>\n",
       "      <td>Ventral part of the lateral geniculate complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>385</td>\n",
       "      <td>0.129023</td>\n",
       "      <td>Primary visual area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>425</td>\n",
       "      <td>0.125154</td>\n",
       "      <td>Posterolateral visual area</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     structure_id  projection_density  \\\n",
       "130           409            0.173552   \n",
       "49            170            0.143360   \n",
       "52            178            0.139534   \n",
       "123           385            0.129023   \n",
       "135           425            0.125154   \n",
       "\n",
       "                                     structure_name  \n",
       "130                             Lateral visual area  \n",
       "49    Dorsal part of the lateral geniculate complex  \n",
       "52   Ventral part of the lateral geniculate complex  \n",
       "123                             Primary visual area  \n",
       "135                      Posterolateral visual area  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unionizes_set_mean.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The Subiculum"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we know how the Allensdk Mouse Brain API can provide us with visual/statistical information about the experiments, we can use it to analyze the Papez Circuit. First we will be looking at the Subiculum to see which structure it projects to the most.\n",
    "\n",
    "**Note:** Feel free to reference to the code provided in the section above to find answers to the questions below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 1:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To get data about the **Subiculum**, we want to use the structure_tree and the get_structures_by_name function. This function takes in a **list** (denoted by brackets) with a **string** (denoted in quotes) of the name of the structure. Suppose we want to get information about the Subiculum. Fill the code below that would output this."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'acronym': 'SUB',\n",
       "  'graph_id': 1,\n",
       "  'graph_order': 535,\n",
       "  'id': 502,\n",
       "  'name': 'Subiculum',\n",
       "  'rgb_triplet': [79, 194, 68],\n",
       "  'structure_id_path': [997, 8, 567, 688, 695, 1089, 822, 502],\n",
       "  'structure_set_ids': [112905828,\n",
       "   691663206,\n",
       "   688152359,\n",
       "   687527945,\n",
       "   10,\n",
       "   12,\n",
       "   184527634,\n",
       "   112905813,\n",
       "   167587189,\n",
       "   114512891,\n",
       "   114512892]}]"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subiculum = structure_tree.get_structures_by_name([\"Subiculum\"])\n",
    "subiculum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "502\n"
     ]
    }
   ],
   "source": [
    "subiculum_id = subiculum[0]['id']\n",
    "print(subiculum_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# get a table of injection experiments. This is a list of dictionaries.\n",
    "\n",
    "experiments = mcc.get_experiments(injection_structure_ids=[502]) # insert your structure id here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>id</th>\n",
       "      <th>injection_structures</th>\n",
       "      <th>injection_volume</th>\n",
       "      <th>injection_x</th>\n",
       "      <th>injection_y</th>\n",
       "      <th>injection_z</th>\n",
       "      <th>primary_injection_structure</th>\n",
       "      <th>product_id</th>\n",
       "      <th>specimen_name</th>\n",
       "      <th>strain</th>\n",
       "      <th>structure_abbrev</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>structure_name</th>\n",
       "      <th>transgenic_line</th>\n",
       "      <th>transgenic_line_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>527712447</td>\n",
       "      <td>[502, 926, 1084, 484682470]</td>\n",
       "      <td>0.006655</td>\n",
       "      <td>9240</td>\n",
       "      <td>3070</td>\n",
       "      <td>8990</td>\n",
       "      <td>502</td>\n",
       "      <td>5</td>\n",
       "      <td>Penk-IRES2-Cre-neo-249961</td>\n",
       "      <td>C57BL/6J</td>\n",
       "      <td>SUB</td>\n",
       "      <td>502</td>\n",
       "      <td>Subiculum</td>\n",
       "      <td>Penk-IRES2-Cre-neo</td>\n",
       "      <td>298725927.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>506426778</td>\n",
       "      <td>[502, 918, 926, 312782628]</td>\n",
       "      <td>0.324160</td>\n",
       "      <td>9500</td>\n",
       "      <td>4320</td>\n",
       "      <td>9420</td>\n",
       "      <td>502</td>\n",
       "      <td>5</td>\n",
       "      <td>Gpr26-Cre_KO250-206293</td>\n",
       "      <td>None</td>\n",
       "      <td>SUB</td>\n",
       "      <td>502</td>\n",
       "      <td>Subiculum</td>\n",
       "      <td>Gpr26-Cre_KO250</td>\n",
       "      <td>177839285.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M</td>\n",
       "      <td>550155867</td>\n",
       "      <td>[502, 726, 843, 926, 1084]</td>\n",
       "      <td>0.203537</td>\n",
       "      <td>9280</td>\n",
       "      <td>4410</td>\n",
       "      <td>8940</td>\n",
       "      <td>502</td>\n",
       "      <td>5</td>\n",
       "      <td>Slc17a6-IRES-Cre-261141</td>\n",
       "      <td>None</td>\n",
       "      <td>SUB</td>\n",
       "      <td>502</td>\n",
       "      <td>Subiculum</td>\n",
       "      <td>Slc17a6-IRES-Cre</td>\n",
       "      <td>177838048.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>126523791</td>\n",
       "      <td>[215, 294, 502, 628, 706, 886, 1061, 484682470]</td>\n",
       "      <td>0.359012</td>\n",
       "      <td>7960</td>\n",
       "      <td>2400</td>\n",
       "      <td>6420</td>\n",
       "      <td>215</td>\n",
       "      <td>5</td>\n",
       "      <td>378-1282</td>\n",
       "      <td>C57BL/6J</td>\n",
       "      <td>SUB</td>\n",
       "      <td>502</td>\n",
       "      <td>Subiculum</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>556343427</td>\n",
       "      <td>[502, 726, 918, 926, 1084, 484682470]</td>\n",
       "      <td>0.349502</td>\n",
       "      <td>9510</td>\n",
       "      <td>4270</td>\n",
       "      <td>9450</td>\n",
       "      <td>502</td>\n",
       "      <td>5</td>\n",
       "      <td>Slc17a6-IRES-Cre-272451</td>\n",
       "      <td>None</td>\n",
       "      <td>SUB</td>\n",
       "      <td>502</td>\n",
       "      <td>Subiculum</td>\n",
       "      <td>Slc17a6-IRES-Cre</td>\n",
       "      <td>177838048.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  gender         id                             injection_structures  \\\n",
       "0      F  527712447                      [502, 926, 1084, 484682470]   \n",
       "1      M  506426778                       [502, 918, 926, 312782628]   \n",
       "2      M  550155867                       [502, 726, 843, 926, 1084]   \n",
       "3      M  126523791  [215, 294, 502, 628, 706, 886, 1061, 484682470]   \n",
       "4      F  556343427            [502, 726, 918, 926, 1084, 484682470]   \n",
       "\n",
       "   injection_volume  injection_x  injection_y  injection_z  \\\n",
       "0          0.006655         9240         3070         8990   \n",
       "1          0.324160         9500         4320         9420   \n",
       "2          0.203537         9280         4410         8940   \n",
       "3          0.359012         7960         2400         6420   \n",
       "4          0.349502         9510         4270         9450   \n",
       "\n",
       "   primary_injection_structure  product_id              specimen_name  \\\n",
       "0                          502           5  Penk-IRES2-Cre-neo-249961   \n",
       "1                          502           5     Gpr26-Cre_KO250-206293   \n",
       "2                          502           5    Slc17a6-IRES-Cre-261141   \n",
       "3                          215           5                   378-1282   \n",
       "4                          502           5    Slc17a6-IRES-Cre-272451   \n",
       "\n",
       "     strain structure_abbrev  structure_id structure_name     transgenic_line  \\\n",
       "0  C57BL/6J              SUB           502      Subiculum  Penk-IRES2-Cre-neo   \n",
       "1      None              SUB           502      Subiculum     Gpr26-Cre_KO250   \n",
       "2      None              SUB           502      Subiculum    Slc17a6-IRES-Cre   \n",
       "3  C57BL/6J              SUB           502      Subiculum                None   \n",
       "4      None              SUB           502      Subiculum    Slc17a6-IRES-Cre   \n",
       "\n",
       "   transgenic_line_id  \n",
       "0         298725927.0  \n",
       "1         177839285.0  \n",
       "2         177838048.0  \n",
       "3                 NaN  \n",
       "4         177838048.0  "
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# a list of dictionaries can be directly converted into a dataframe. Syntax:\n",
    "data = pd.DataFrame(experiments)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now choose an experiment id of your choosing. Try looking at the Mouse Brain Atlas to choose one that is does not have a large projection volumne nor one that has a small projection volume."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number of injections in wild type mice:  5\n",
      "length of unionize results:  1580\n"
     ]
    }
   ],
   "source": [
    "experiment_set = [exp['id'] for exp in experiments if exp['transgenic_line'] == None]\n",
    "print('number of injections in wild type mice: ', len(experiment_set))\n",
    "unionizes_set = mcc.get_structure_unionizes(experiment_set,\n",
    "                                               is_injection = False,\n",
    "                                                # Look at the summary structure level\n",
    "                                                structure_ids = summary_structure_ids,\n",
    "                                               # both hemispheres\n",
    "                                               hemisphere_ids = [3])\n",
    "print('length of unionize results: ', len(unionizes_set))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hemisphere_id</th>\n",
       "      <th>id</th>\n",
       "      <th>is_injection</th>\n",
       "      <th>max_voxel_density</th>\n",
       "      <th>max_voxel_x</th>\n",
       "      <th>max_voxel_y</th>\n",
       "      <th>max_voxel_z</th>\n",
       "      <th>normalized_projection_volume</th>\n",
       "      <th>projection_density</th>\n",
       "      <th>projection_energy</th>\n",
       "      <th>projection_intensity</th>\n",
       "      <th>projection_volume</th>\n",
       "      <th>experiment_id</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>sum_pixel_intensity</th>\n",
       "      <th>sum_pixels</th>\n",
       "      <th>sum_projection_pixel_intensity</th>\n",
       "      <th>sum_projection_pixels</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>633605728</td>\n",
       "      <td>False</td>\n",
       "      <td>0.193167</td>\n",
       "      <td>9470</td>\n",
       "      <td>3920</td>\n",
       "      <td>5290</td>\n",
       "      <td>0.000026</td>\n",
       "      <td>0.000527</td>\n",
       "      <td>0.318564</td>\n",
       "      <td>604.301425</td>\n",
       "      <td>0.000009</td>\n",
       "      <td>126523791</td>\n",
       "      <td>606826663</td>\n",
       "      <td>1.841678e+09</td>\n",
       "      <td>14549400.0</td>\n",
       "      <td>4.634915e+06</td>\n",
       "      <td>7669.872070</td>\n",
       "      <td>0.017823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>633605799</td>\n",
       "      <td>False</td>\n",
       "      <td>0.086906</td>\n",
       "      <td>4910</td>\n",
       "      <td>6350</td>\n",
       "      <td>6260</td>\n",
       "      <td>0.000022</td>\n",
       "      <td>0.000076</td>\n",
       "      <td>0.067015</td>\n",
       "      <td>881.583070</td>\n",
       "      <td>0.000008</td>\n",
       "      <td>126523791</td>\n",
       "      <td>263</td>\n",
       "      <td>3.100086e+10</td>\n",
       "      <td>83300400.0</td>\n",
       "      <td>5.582362e+06</td>\n",
       "      <td>6332.201945</td>\n",
       "      <td>0.102043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>633605766</td>\n",
       "      <td>False</td>\n",
       "      <td>0.808735</td>\n",
       "      <td>12600</td>\n",
       "      <td>6580</td>\n",
       "      <td>5720</td>\n",
       "      <td>0.001495</td>\n",
       "      <td>0.012171</td>\n",
       "      <td>21.415034</td>\n",
       "      <td>1759.549603</td>\n",
       "      <td>0.000537</td>\n",
       "      <td>126523791</td>\n",
       "      <td>222</td>\n",
       "      <td>4.974770e+09</td>\n",
       "      <td>35991000.0</td>\n",
       "      <td>7.707485e+08</td>\n",
       "      <td>438037.372070</td>\n",
       "      <td>0.044089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>633606462</td>\n",
       "      <td>False</td>\n",
       "      <td>0.482966</td>\n",
       "      <td>5800</td>\n",
       "      <td>2630</td>\n",
       "      <td>6040</td>\n",
       "      <td>0.000477</td>\n",
       "      <td>0.000276</td>\n",
       "      <td>0.711739</td>\n",
       "      <td>2581.095593</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>126523791</td>\n",
       "      <td>250</td>\n",
       "      <td>1.161209e+11</td>\n",
       "      <td>507241792.0</td>\n",
       "      <td>3.610235e+08</td>\n",
       "      <td>139872.199219</td>\n",
       "      <td>0.621371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>633606412</td>\n",
       "      <td>False</td>\n",
       "      <td>0.129691</td>\n",
       "      <td>12610</td>\n",
       "      <td>6380</td>\n",
       "      <td>7260</td>\n",
       "      <td>0.000047</td>\n",
       "      <td>0.000014</td>\n",
       "      <td>0.010358</td>\n",
       "      <td>747.404721</td>\n",
       "      <td>0.000017</td>\n",
       "      <td>126523791</td>\n",
       "      <td>1098</td>\n",
       "      <td>2.049413e+11</td>\n",
       "      <td>994647616.0</td>\n",
       "      <td>1.030250e+07</td>\n",
       "      <td>13784.360352</td>\n",
       "      <td>1.218443</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   hemisphere_id         id  is_injection  max_voxel_density  max_voxel_x  \\\n",
       "0              3  633605728         False           0.193167         9470   \n",
       "1              3  633605799         False           0.086906         4910   \n",
       "2              3  633605766         False           0.808735        12600   \n",
       "3              3  633606462         False           0.482966         5800   \n",
       "4              3  633606412         False           0.129691        12610   \n",
       "\n",
       "   max_voxel_y  max_voxel_z  normalized_projection_volume  projection_density  \\\n",
       "0         3920         5290                      0.000026            0.000527   \n",
       "1         6350         6260                      0.000022            0.000076   \n",
       "2         6580         5720                      0.001495            0.012171   \n",
       "3         2630         6040                      0.000477            0.000276   \n",
       "4         6380         7260                      0.000047            0.000014   \n",
       "\n",
       "   projection_energy  projection_intensity  projection_volume  experiment_id  \\\n",
       "0           0.318564            604.301425           0.000009      126523791   \n",
       "1           0.067015            881.583070           0.000008      126523791   \n",
       "2          21.415034           1759.549603           0.000537      126523791   \n",
       "3           0.711739           2581.095593           0.000171      126523791   \n",
       "4           0.010358            747.404721           0.000017      126523791   \n",
       "\n",
       "   structure_id  sum_pixel_intensity   sum_pixels  \\\n",
       "0     606826663         1.841678e+09   14549400.0   \n",
       "1           263         3.100086e+10   83300400.0   \n",
       "2           222         4.974770e+09   35991000.0   \n",
       "3           250         1.161209e+11  507241792.0   \n",
       "4          1098         2.049413e+11  994647616.0   \n",
       "\n",
       "   sum_projection_pixel_intensity  sum_projection_pixels    volume  \n",
       "0                    4.634915e+06            7669.872070  0.017823  \n",
       "1                    5.582362e+06            6332.201945  0.102043  \n",
       "2                    7.707485e+08          438037.372070  0.044089  \n",
       "3                    3.610235e+08          139872.199219  0.621371  \n",
       "4                    1.030250e+07           13784.360352  1.218443  "
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unionizes_set.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question:\n",
    "\n",
    "What structure has the largest projection density?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "491"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "index = unionizes_set.sort_values('projection_density', ascending=False)['structure_id'].values[0]\n",
    "index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Medial mammillary nucleus'"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "name_map = structure_tree.get_name_map()\n",
    "name_map[index]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question:\n",
    "\n",
    "Create a distribution of the values from unionizes_set that are in the medial mammillary nucleus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hemisphere_id</th>\n",
       "      <th>id</th>\n",
       "      <th>is_injection</th>\n",
       "      <th>max_voxel_density</th>\n",
       "      <th>max_voxel_x</th>\n",
       "      <th>max_voxel_y</th>\n",
       "      <th>max_voxel_z</th>\n",
       "      <th>normalized_projection_volume</th>\n",
       "      <th>projection_density</th>\n",
       "      <th>projection_energy</th>\n",
       "      <th>projection_intensity</th>\n",
       "      <th>projection_volume</th>\n",
       "      <th>experiment_id</th>\n",
       "      <th>structure_id</th>\n",
       "      <th>sum_pixel_intensity</th>\n",
       "      <th>sum_pixels</th>\n",
       "      <th>sum_projection_pixel_intensity</th>\n",
       "      <th>sum_projection_pixels</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>3</td>\n",
       "      <td>633605954</td>\n",
       "      <td>False</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>8090</td>\n",
       "      <td>5860</td>\n",
       "      <td>5300</td>\n",
       "      <td>0.153744</td>\n",
       "      <td>0.092688</td>\n",
       "      <td>507.527245</td>\n",
       "      <td>5475.634588</td>\n",
       "      <td>0.055196</td>\n",
       "      <td>126523791</td>\n",
       "      <td>491</td>\n",
       "      <td>3.957517e+11</td>\n",
       "      <td>486122392.0</td>\n",
       "      <td>2.467204e+11</td>\n",
       "      <td>4.505786e+07</td>\n",
       "      <td>0.5955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>441</th>\n",
       "      <td>3</td>\n",
       "      <td>645407479</td>\n",
       "      <td>False</td>\n",
       "      <td>0.60012</td>\n",
       "      <td>8190</td>\n",
       "      <td>6270</td>\n",
       "      <td>5810</td>\n",
       "      <td>0.835991</td>\n",
       "      <td>0.040425</td>\n",
       "      <td>48.220957</td>\n",
       "      <td>1192.838340</td>\n",
       "      <td>0.024073</td>\n",
       "      <td>640285199</td>\n",
       "      <td>491</td>\n",
       "      <td>2.027541e+11</td>\n",
       "      <td>486122392.0</td>\n",
       "      <td>2.344129e+10</td>\n",
       "      <td>1.965169e+07</td>\n",
       "      <td>0.5955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>910</th>\n",
       "      <td>3</td>\n",
       "      <td>633558206</td>\n",
       "      <td>False</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>8240</td>\n",
       "      <td>6230</td>\n",
       "      <td>5300</td>\n",
       "      <td>0.298778</td>\n",
       "      <td>0.248148</td>\n",
       "      <td>545.671184</td>\n",
       "      <td>2198.970868</td>\n",
       "      <td>0.147772</td>\n",
       "      <td>127222723</td>\n",
       "      <td>491</td>\n",
       "      <td>3.662006e+11</td>\n",
       "      <td>486122392.0</td>\n",
       "      <td>2.652630e+11</td>\n",
       "      <td>1.206305e+08</td>\n",
       "      <td>0.5955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1206</th>\n",
       "      <td>3</td>\n",
       "      <td>628260905</td>\n",
       "      <td>False</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>8120</td>\n",
       "      <td>6310</td>\n",
       "      <td>5250</td>\n",
       "      <td>1.667512</td>\n",
       "      <td>0.349938</td>\n",
       "      <td>934.721490</td>\n",
       "      <td>2671.104317</td>\n",
       "      <td>0.208388</td>\n",
       "      <td>152994878</td>\n",
       "      <td>491</td>\n",
       "      <td>5.253763e+11</td>\n",
       "      <td>486122392.0</td>\n",
       "      <td>4.543890e+11</td>\n",
       "      <td>1.701128e+08</td>\n",
       "      <td>0.5955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1360</th>\n",
       "      <td>3</td>\n",
       "      <td>633830886</td>\n",
       "      <td>False</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>8240</td>\n",
       "      <td>5970</td>\n",
       "      <td>5350</td>\n",
       "      <td>0.834899</td>\n",
       "      <td>0.446652</td>\n",
       "      <td>2746.234767</td>\n",
       "      <td>6148.483279</td>\n",
       "      <td>0.265981</td>\n",
       "      <td>127795906</td>\n",
       "      <td>491</td>\n",
       "      <td>1.434483e+12</td>\n",
       "      <td>486122392.0</td>\n",
       "      <td>1.335006e+12</td>\n",
       "      <td>2.171277e+08</td>\n",
       "      <td>0.5955</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      hemisphere_id         id  is_injection  max_voxel_density  max_voxel_x  \\\n",
       "73                3  633605954         False            1.00000         8090   \n",
       "441               3  645407479         False            0.60012         8190   \n",
       "910               3  633558206         False            1.00000         8240   \n",
       "1206              3  628260905         False            1.00000         8120   \n",
       "1360              3  633830886         False            1.00000         8240   \n",
       "\n",
       "      max_voxel_y  max_voxel_z  normalized_projection_volume  \\\n",
       "73           5860         5300                      0.153744   \n",
       "441          6270         5810                      0.835991   \n",
       "910          6230         5300                      0.298778   \n",
       "1206         6310         5250                      1.667512   \n",
       "1360         5970         5350                      0.834899   \n",
       "\n",
       "      projection_density  projection_energy  projection_intensity  \\\n",
       "73              0.092688         507.527245           5475.634588   \n",
       "441             0.040425          48.220957           1192.838340   \n",
       "910             0.248148         545.671184           2198.970868   \n",
       "1206            0.349938         934.721490           2671.104317   \n",
       "1360            0.446652        2746.234767           6148.483279   \n",
       "\n",
       "      projection_volume  experiment_id  structure_id  sum_pixel_intensity  \\\n",
       "73             0.055196      126523791           491         3.957517e+11   \n",
       "441            0.024073      640285199           491         2.027541e+11   \n",
       "910            0.147772      127222723           491         3.662006e+11   \n",
       "1206           0.208388      152994878           491         5.253763e+11   \n",
       "1360           0.265981      127795906           491         1.434483e+12   \n",
       "\n",
       "       sum_pixels  sum_projection_pixel_intensity  sum_projection_pixels  \\\n",
       "73    486122392.0                    2.467204e+11           4.505786e+07   \n",
       "441   486122392.0                    2.344129e+10           1.965169e+07   \n",
       "910   486122392.0                    2.652630e+11           1.206305e+08   \n",
       "1206  486122392.0                    4.543890e+11           1.701128e+08   \n",
       "1360  486122392.0                    1.335006e+12           2.171277e+08   \n",
       "\n",
       "      volume  \n",
       "73    0.5955  \n",
       "441   0.5955  \n",
       "910   0.5955  \n",
       "1206  0.5955  \n",
       "1360  0.5955  "
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mmn = unionizes_set[unionizes_set['structure_id'] == 491]\n",
    "mmn"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question:\n",
    "\n",
    "Do you think there is a correlation between projection density and projection volume? Make a scatterplot and calculate the correlation coefficient."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a223b3908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(mmn['projection_density'], mmn['projection_volume']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.97651220873366151"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr = np.corrcoef(mmn['projection_density'], mmn['projection_volume'])[0][1]\n",
    "corr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Why is this not a good representation of our data? It's because we have very few data points that the correlation coefficient can be \"biased\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nAVH36QboYn4KAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a22c11630>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "proj_dens = mmn['projection_density'].values\n",
    "plt.title('Distribution of Projection Densities at the Medial Mammilary Nucleus')\n",
    "plt.xlabel(\"Projection Density\")\n",
    "sns.kdeplot(proj_dens);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Question:\n",
    "\n",
    "Based on the distribution, what do you think the mean, median, and standard deviation is? (0.225, 0.2, 0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Question:\n",
    "\n",
    "Find the mean of the projection densities at the medial mammillary nucleus."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.23557054765769622"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean = sum(proj_dens) / len(proj_dens)\n",
    "mean"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question:\n",
    "\n",
    "Find the standard deviation of the projection densities at the medial mammillary nucleus.\n",
    "\n",
    "Recall:\n",
    "\n",
    "$$\\sigma = \\sqrt{\\sum_{i=1}^N \\frac{(x-\\mu)^2}{N - 1}}$$\n",
    "\n",
    "* $\\sigma$ = standard deviation\n",
    "* $x$ = data\n",
    "* $\\mu$ = mean\n",
    "* $N$ = number of values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.17050709841601444"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std = np.sqrt(sum((proj_dens - mean)**2) / (len(proj_dens) - 1))\n",
    "std"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Question:\n",
    "\n",
    "Find the median of the projection densities at the medial mammillary nucleus."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.44665239,  0.34993822,  0.24814844,  0.0926883 ,  0.04042539])"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted_dens = mmn.sort_values('projection_density', ascending=False)['projection_density'].values\n",
    "sorted_dens"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.24814843696811198"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "median = sorted_dens[2]\n",
    "median"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nKyJU0kq9/AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1904ac18>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We can combine groupby and mean to find the average projection density across experiments for each summary structure\n",
    "unionizes_set_mean = (unionizes_set.groupby('structure_id', as_index = False)['projection_density'].mean())\n",
    "\n",
    "# Again, add a column with summary structure acronyms so we can interpret the unionizes more easily\n",
    "names = [name_map[strid] for strid in unionizes_set_mean['structure_id']]\n",
    "unionizes_set_mean['structure_name'] = names\n",
    "unionizes_set_mean.sort_values(by = 'projection_density', ascending = False, inplace = True)\n",
    "\n",
    "# Plot the 20 structures with the highest average projection density across all wild type VISp injections\n",
    "unionizes_set_mean[:20].plot('structure_name', 'projection_density', kind='barh')\n",
    "plt.gca().invert_yaxis()\n",
    "plt.title('Average Unionize Data for %i injections'%len(experiment_set));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean_projection_density</th>\n",
       "      <th>stdev</th>\n",
       "      <th>structure_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>0.235571</td>\n",
       "      <td>0.170507</td>\n",
       "      <td>Medial mammillary nucleus</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>0.156300</td>\n",
       "      <td>0.164140</td>\n",
       "      <td>Presubiculum</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>0.137534</td>\n",
       "      <td>0.125943</td>\n",
       "      <td>Anteromedial nucleus</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>0.136466</td>\n",
       "      <td>0.101008</td>\n",
       "      <td>Perifornical nucleus</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>0.124839</td>\n",
       "      <td>0.083361</td>\n",
       "      <td>Subiculum</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     mean_projection_density     stdev             structure_name\n",
       "145                 0.235571  0.170507  Medial mammillary nucleus\n",
       "282                 0.156300  0.164140               Presubiculum\n",
       "35                  0.137534  0.125943       Anteromedial nucleus\n",
       "308                 0.136466  0.101008       Perifornical nucleus\n",
       "146                 0.124839  0.083361                  Subiculum"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# look at the data\n",
    "# re-generate means so they are in the same order as standard deviation\n",
    "unionizes_set_mean = (\n",
    "    unionizes_set.groupby('structure_id', as_index = False)[\n",
    "    'projection_density'].mean())\n",
    "\n",
    "# generate a second data frame with standard deviations\n",
    "unionizes_set_std = (\n",
    "    unionizes_set.groupby('structure_id', as_index = False)[\n",
    "    'projection_density'].std())\n",
    "\n",
    "# find names from structure ids\n",
    "names = [name_map[strid] for strid in unionizes_set_mean['structure_id']]\n",
    "\n",
    "# combine names, mean, and standard deviation into one dataframe for easy plotting\n",
    "set_mean_std = pd.DataFrame({'structure_name': names, \n",
    "                            'mean_projection_density': unionizes_set_mean['projection_density'], \n",
    "                            'stdev':  unionizes_set_std['projection_density']\n",
    "                            })\n",
    "\n",
    "# sort the dataframe to get the top 20 values on top\n",
    "set_mean_std.sort_values(by = 'mean_projection_density', ascending = False, inplace = True)\n",
    "\n",
    "set_mean_std.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "What is the Mean projection density and standard deviataion for the Medial Mammillary nucleus? Does it match your calculation?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean_projection_density</th>\n",
       "      <th>stdev</th>\n",
       "      <th>structure_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>0.235571</td>\n",
       "      <td>0.170507</td>\n",
       "      <td>Medial mammillary nucleus</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     mean_projection_density     stdev             structure_name\n",
       "145                 0.235571  0.170507  Medial mammillary nucleus"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set_mean_std[set_mean_std['structure_name'] == 'Medial mammillary nucleus']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
